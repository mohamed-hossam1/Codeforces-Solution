using namespace std;
#include <bits/stdc++.h>

#define fast                      \
    ios_base::sync_with_stdio(0); \
    cin.tie(0);                   \
    cout.tie(0);
#define ll long long
#define int long long
#define yes cout << "YES\n"
#define no cout << "NO\n"
#define For(j) for (int i = 0; i < j; i++)
#define endl '\n'
#define dd(b, a) cout << fixed << setprecision(b) << a << endl;
#define all(s) s.begin(), s.end()
const int N = 3e5;
// int s (int v){
//     int g = v-2;
//     return ((g*(g+1)/2)+(g*(g-1)/2));
// }
 
void solve()
{
    int n,m,k;
    cin >> n >> m >> k;
    vector<int> v(m);
    For(m)cin>>v[i];
    int count =0;
    int start =0;
    int end = 0;
    vector<int> tmp;
    int p=0;
    for (int i = 0; i < m; i++)
    {
        if(v[i]>=start&&v[i]<=end){
            tmp.push_back(v[i]);
        }
        else{
            end+=tmp.size();
            tmp.clear();
            count++;
            if(v[i]>=start&&v[i]<=end){
                i--;
                continue;
            }
            if(v[i]%k==0)
            start = ((v[i]/k)-1)*k+1+i;
            else start = (v[i]/k)*k+1+i;
            if(start>v[i]){
                int times = ceil((double(start) - v[i]) / k/1.0);
                start -= times * k;
                while (start>v[i])start-=k;
            }
            end = start + k-1;
            i--;
        }
    }
    if(tmp.empty())count--;
    cout<<count;
}
signed main() {
    fast;
    int t = 1;
    // cin>>t;
    while (t--) {
        solve();
        cout << endl;
    }
}
